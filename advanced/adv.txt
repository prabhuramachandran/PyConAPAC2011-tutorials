Advanced Tutorial:

* Tutorial title: Advanced Scientific Computing with Python

* Intended audience (difficulty level, experience required):

   Programmers familiar with Python and with basic numerical computing
   with Python (numpy, scipy and matplotlib).  Attendees should be
   familiar with the content covered in the introductory tutorial on
   scientific computing with Python.


* Prerequisites: What experience must attendees have in order to fully
  benefit from this tutorial?

  Good grasp of the Python programming language including OOP.
  Knowledge of the material covered in the introductory tutorial. One
  should have the recommended packages installed.


* Promotional summary (max. 100 words).

  At the end of this tutorial, attendees should be able to get their
  hands dirty with some of the more advanced tools used for scientific
  computing.  We imagine that a serious computational researcher would
  be able to start using some of these powerful tools for their own
  work.

* Detailed tutorial outline

  We only hope to introduce and get attendees started with the tools
  and provide pointers to them on how to learn more.  Given that this
  tutorial is at a much higher level, and the nature of the typical
  audience we intend to roughly cover the following topics:

   - A rapid overview of the major tools available.
   - Advanced NumPy features including fancy indexing, record arrays
     and broadcasting.
   - Brief overview of installing Python packages and using virtualenv
     -- despite this not being directly related to scientific
     computing, we feel this is really useful.
   - A hands-on introduction to Cython: a tool to write high
     performance code with Python.
   - Creating user interfaces with Traits and Traits UI.
   - 3D visualization with Mayavi's mlab.
   - We end with a quick demo of Sage and its notebook for symbolic and
     numerical computing.
     

* Attendee Requirements: A list of software and hardware attendees will
  need for the tutorial.

  A laptop is definitely recommended since this will be a hands-on
  session.  You will need to have Python (2.6/2.7 would work fine),
  IPython (0.10.x), Numpy (1.x), SciPy (>0.5.x), matplotlib (any recent
  version), setuptools/distribute and virtualenv, Mayavi-3.x and above,
  Cython (any reasonably recent version > 0.12).  Sage version 4.x.

  On Windows and Mac OS X it is easiest to install these by installing
  the Enthought Python Distribution.  On GNU/Linux these are typically
  available along with the distribution.  The packages are all available
  on Ubuntu.  FOSSEE provides a live Ubuntu-based DVD with all the
  necessary packages.  It can be downloaded here:
  http://fossee.in/download#DVDs

* Previous experience: 

  I have taught some of this material at various colleges in India as
  part of the FOSSEE initiative.  Have also taught this content at SciPy
  2010 in Austin, TX for a 2 day introductory course.  I regularly use
  Cython and am the main developer of Mayavi (which in turn uses Traits
  heavily).

